---
code: |
  if pa_received == True:
    pa_food_assistance_program
    if pa_mdhhs or pa_other:
      if pa_mdhhs:
        pa_mdhhs_case_number
      if pa_other:
        pa_other_types
    elif pa_supplemental_security:
      pa_ssa_number
  else:
    pa_food_assistance_program = False
    pa_medicaid = False
    pa_family_independence_program = False
    pa_women_infants_children = False
    pa_state_disability = False
    pa_state_emergency_relief = False
    pa_refugee_assistance = False
    pa_supplemental_security = False
    pa_other = False
    # deleting these causes them to be asked again... *%@#ing docassemble...
    #del pa_mdhhs_case_number
    #del pa_other_types
    #del pa_other_case_numbers
  recompute_legal_service
  pa_recalc_trigger = True

---
code: |
  if pa_supplemental_security and not (pa_mdhhs or pa_other):
    pa_ssa_number
  pa_ssa_recalc_trigger = True
---
code: |
  if pa_received == False:
    if legal_service_representation:
      legal_service_provider
    else:
      check_for_indigency
  recompute_legal_service = True

---
code: |
  if plaintiffs[0].has_attorney:
    plaintiff_attorneys[0].bar_number
    plaintiff_attorneys[0].address.address
    plaintiff_attorneys[0].no_phone_number
  recompute_plaintiff_attorney = True
---
code: |
  if defendants[0].has_attorney:
    defendant_attorneys[0].bar_number
    defendant_attorneys[0].address.address
    defendant_attorneys[0].no_phone_number
  recompute_defendant_attorney = True

---
code: |
  if user_vehicles.there_are_any:
    user_vehicles.gather()
  if user_assets.there_are_any:
    user_assets.gather()
  recompute_assets = True

---
code: |
  if expense_child_support:
    expense_child_support_amount
  if user_court_payments.there_are_any:
    user_court_payments.gather()
  if user_monthly_payments.there_are_any:
    user_monthly_payments.gather()
  recompute_obligations = True

---
code: |
  if user_ask_role == 'plaintiff':
    plaintiffs.gather()
    plaintiffs[0].address.address
    plaintiffs[0].phone_number
    if users[0].has_attorney:
      plaintiff_attorneys[0].bar_number # will also get name
      plaintiff_attorneys[0].address.address
      plaintiff_attorneys[0].no_phone_number
    defendants.gather()
    defendants[0].address.address
    defendants[0].phone_number
    if defendants[0].has_attorney:
      defendant_attorneys[0].bar_number # will also get name
      defendant_attorneys[0].address.address
      defendant_attorneys[0].no_phone_number
  else:
    defendants.gather()
    defendants[0].address.address
    defendants[0].phone_number
    if users[0].has_attorney:
      defendant_attorneys[0].bar_number # will also get name
      defendant_attorneys[0].address.address
      defendant_attorneys[0].no_phone_number
    plaintiffs.gather()
    plaintiffs[0].address.address
    plaintiffs[0].phone_number
    if plaintiffs[0].has_attorney:
      plaintiff_attorneys[0].bar_number # will also get name
      plaintiff_attorneys[0].address.address
      plaintiff_attorneys[0].no_phone_number
  recompute_parties = True

---
id: fee waiver request review screen
event: review_full
question: |
  Review your answers
review:
  - note: |
      ### Case and Court Information
  - Edit: 
    - court_type
    - county_choice
    #- court_index
    #- court_index_for_specific_court_type
    # TODO - get these changes to work... 
    - recompute:
      - the_court
      - recompute_court
      - court_index
      - court_count
      #- court_index_for_specific_court_type  # this actually deletes it, but does re-ask it...
    button: |
      **Court Information**
      
      % if court_type == 'probate':
      ${ county_choice } County Probate Court
      % else:
      ${ the_court.number } ${ the_court.type.capitalize() } Court

      ${ county_choice } County
      % endif

      ${ the_court.address.on_one_line() }
  - Edit:
    - court_index_for_specific_court_type
    - recompute:
      - the_court
      - court_index
      - court_count
    button: |
      **${ county_choice } ${ the_court.type.capitalize() } Court Location:**
      
      ${ the_court.number } (${ the_court.name })
    show if: court_count > 1
  - Edit: case_type
    button: |
      **Does your court case have two parties (Plaintiff/Defendant or Petitioner/Respondent)?**
      ${ word(yesno(case_type=='Parties')) }
    show if: court_type == 'circuit'
  - Edit:
    - user_ask_role
    - recompute:
      - plaintiffs
      - defendants
      - users[0].has_attorney
      - other_parties[0].has_attorney
      - plaintiff_attorneys
      - defendant_attorneys
      - recompute_parties
      # re-ask for plaintiffs if switching to defendant on last screen
      #- force_regather_others
    button: |
      **You are a**: ${ user_ask_role }
  - Edit: trial_court_circuit
    button: |
      **Circuit:**
      ${ trial_court_circuit }
    show if: court_type == 'circuit'
  - Edit: trial_court_district
    button: |
      **District:**
      Test:
      ${ trial_court_district }
      Test 2:
    show if: court_type == 'district'
  - Edit: docket_number
    button: |
      **Docket number:**
      ${ docket_number }
  - Edit: in_the_matter_of
    button: |
      **In the matter of:**
      ${ in_the_matter_of }
    show if: case_type == 'Matter'
    
  - note: |
      <hr>
      ### Parties and Attorneys
    show if: case_type == 'Parties'
  - Edit: users.revisit
    button: |
      **Your Information**

      % for item in users:
        ${ item }
        
        ${ item.address.block() }
        
        ${ word("") if item.no_phone_number else item.phone_numbers() }
      % endfor
    show if: case_type == 'Parties'
  - Edit: other_parties.revisit
    button: |
      **Other Party Information**

      % for item in other_parties:
        ${ item }
        
        ${ item.address.block() }
        
        ${ word("") if item.no_phone_number else item.phone_numbers() }
      % endfor
    show if: case_type == 'Parties'
  - Edit: 
    - plaintiffs[0].has_attorney
    - recompute:
      - recompute_plaintiff_attorney
    button: |
      **${ plaintiffs[0].name.full() } has attorney?**
      ${ word(yesno(plaintiffs[0].has_attorney)) }
    show if: case_type == 'Parties'
  - Edit: 
    - plaintiff_attorneys[0].bar_number # do bar first so it triggers custom page
    - plaintiff_attorneys[0].name.first
    - plaintiff_attorneys[0].address.address
    - plaintiff_attorneys[0].address.unit
    - plaintiff_attorneys[0].address.city
    - plaintiff_attorneys[0].address.state
    - plaintiff_attorneys[0].address.zip
    - plaintiff_attorneys[0].no_phone_number
    button: |
      **${ plaintiffs[0].name.full() }'s attorney:**

      ${ plaintiff_attorneys[0].name.full() }
      ${ plaintiff_attorneys[0].bar_number }
      
      ${ plaintiff_attorneys[0].address.block() }
      
      Phone: ${ word("None") if plaintiff_attorneys[0].no_phone_number else phone_number_formatted(plaintiff_attorneys[0].phone_number) }
    show if: case_type == 'Parties' and plaintiffs[0].has_attorney
  - Edit: 
    - defendants[0].has_attorney
    - recompute:
      - recompute_defendant_attorney
    button: |
      **${ defendants[0].name.full() } has attorney?**
      ${ word(yesno(defendants[0].has_attorney)) }
  - Edit: 
    - defendant_attorneys[0].bar_number
    - defendant_attorneys[0].name.first
    - defendant_attorneys[0].address.address
    - defendant_attorneys[0].address.unit
    - defendant_attorneys[0].address.city
    - defendant_attorneys[0].address.state
    - defendant_attorneys[0].address.zip
    - defendant_attorneys[0].no_phone_number
    button: |
      **${ defendants[0].name.full() }'s attorney:**
      
      ${ defendant_attorneys[0].name.full() }
      ${ defendant_attorneys[0].bar_number }
      
      ${ defendant_attorneys[0].address.block() }
      
      Phone: ${ word("None") if defendant_attorneys[0].no_phone_number else phone_number_formatted(defendant_attorneys[0].phone_number) }
    show if: case_type == 'Parties' and defendants[0].has_attorney

  - note: |
      <hr>
      ### Public Assistance
  - Edit:
    - pa_received
    - pa_food_assistance_program
    - pa_medicaid
    - pa_family_independence_program
    - pa_women_infants_children
    - pa_state_disability
    - pa_state_emergency_relief
    - pa_refugee_assistance
    - pa_supplemental_security
    - recompute:
      - pa_recalc_trigger
      - pa_ssa_recalc_trigger
      - pa_mdhhs
      - recompute_legal_service
      - pa_other_list
      - unable_to_pay
      - assets_list
      - obligations_list
    button: |
      **Public assistance received:**
      ${ word(yesno(pa_received)) }
      
      Food Assistance Program (FAP or SNAP): ${ word(yesno(pa_food_assistance_program)) }
      
      Medicaid: ${ word(yesno(pa_medicaid)) }
      
      Family Independence Program (FIP or TANF): ${ word(yesno(pa_family_independence_program)) }
      
      Women, Infants, and Children benefits (WIC): ${ word(yesno(pa_women_infants_children)) }
      
      State Disability Assistance (SDA): ${ word(yesno(pa_state_disability)) }
      
      State Emergency Relief (SER): ${ word(yesno(pa_state_emergency_relief)) }
      
      Refugee Assistance Program (RAP): ${ word(yesno(pa_refugee_assistance)) }
      
      Supplemental Security Income (SSI): ${ word(yesno(pa_supplemental_security)) }
      
      Other means-tested public assistance: ${ word(yesno(pa_other)) }
  - Edit: pa_mdhhs_case_number
    button: |
      **MDHHS Case #:**
      ${ pa_mdhhs_case_number }
    show if: pa_mdhhs
  - Edit: pa_other_types
    button: |
      **Other types(s) of public assistance received:**
      ${ pa_other_types }
    show if: pa_received and pa_other == True
  - Edit: pa_other_case_numbers
    button: |
      **Other public assistance case numbers:**
      ${ pa_other_case_numbers }
    show if: pa_received and pa_other == True
  - Edit: pa_ssa_number
    button: |
      **SSA Case #:**
      ${ pa_ssa_number }
    show if: pa_supplemental_security == True and pa_mdhhs != True

  - note: |
      <hr>
      ### Legal Service Representation
    show if: pa_received == False
  - Edit: 
    - legal_service_representation
    - recompute: 
      - recompute_legal_service
      - unable_to_pay
      - assets_list
      - obligations_list
    button: |
      **Receive legal assistance?**
      ${ word(yesno(legal_service_representation)) }
  - Edit: legal_service_provider
    button: |
      **Name of the legal service provider or law school clinic:**
      ${ legal_service_provider }
    show if: legal_service_representation == True

  - note: |
      <hr>
      ### Household Information
    show if: unable_to_pay
  - Edit: household_size
    button: |
      **Household size:**
      ${ household_size }
    show if: unable_to_pay
  - label: Edit
    fields: 
      - household_income
      - household_income_period
    button: |
      **Gross household income:**
      ${ currency(household_income) }
      every
      ${ household_income_period }
    show if: unable_to_pay
  - Edit: income_employment
    button: |
      **Are you employed?**
      ${ word(yesno(income_employment)) }
    show if: unable_to_pay
  - Edit: income_unemployment
    button: |
      **Do you receive unemployment benefits?**
      ${ word(yesno(income_unemployment)) }
    show if: unable_to_pay

  - note: |
      <hr>
      ### Assets
    show if: unable_to_pay
  - Edit: 
    - bank_account_balance
    - recompute:
      - recompute_assets
      - assets_list
    button: |
      **Bank account balance:**
      ${ currency(bank_account_balance) }
    show if: unable_to_pay

  - Edit:
    - user_vehicles.there_are_any
    - recompute:
      - recompute_assets
      - assets_list
    button: |
      **Do you have any vehicles?**
      ${ word(yesno(user_vehicles.there_are_any)) }
    show if: unable_to_pay
  - Edit: 
    - user_vehicles.revisit
    - recompute:
      - recompute_assets
      - assets_list
    button: |
      **Vehicles:**

      % for item in user_vehicles:
        * ${ item.year_make_model(separator=' ') }, 
        % if item.balance_owed:
        Money owed: ${ currency(item.balance) } 
        % else:
        Money owned: None
        % endif
      % endfor
    show if: unable_to_pay and user_vehicles.there_are_any

  - Edit:
    - user_assets.there_are_any
    - recompute:
      - recompute_assets
      - assets_list
    button: |
      **Do you have any other assets?**
      ${ word(yesno(user_assets.there_are_any)) }
    show if: unable_to_pay
  - Edit: 
    - user_assets.revisit
    - recompute:
      - recompute_assets
      - assets_list
    button: |
      **Other Assets:**

      % for item in user_assets:
        * ${ item.source }, ${ currency(item.value) }
      % endfor
    show if: unable_to_pay and user_assets.there_are_any

  - note: |
      <hr>
      ### Payments and Obligations
    show if: unable_to_pay
  - Edit: 
    - expense_rent_amount
    - recompute:
      - recompute_obligations
      - obligations_list
    button: |
      **Monthly rent or mortgage:**
      ${ currency(expense_rent_amount) }
    show if: unable_to_pay
  - Edit: 
    - expense_utilities_amount
    - recompute:
      - recompute_obligations
      - obligations_list
    button: |
      **Monthly utilities cost:**
      ${ currency(expense_utilities_amount) }
    show if: unable_to_pay
  - Edit:
    - expense_child_support
    - recompute: 
      - recompute_obligations
      - obligations_list
    button: |
      **Monthly child support payments?**
      ${ word(yesno(expense_child_support)) }
      % if expense_child_support:
      ${ currency(expense_child_support_amount) }
      % endif
    show if: unable_to_pay

  - Edit:
    - user_court_payments.there_are_any
    - recompute:
      - recompute_obligations
      - obligations_list
    button: |
      **Do you have other court-ordered payments?**
      ${ word(yesno(user_court_payments.there_are_any)) }
    show if: unable_to_pay
  - Edit: 
    - user_court_payments.revisit
    - recompute:
      - recompute_obligations
      - obligations_list
    button: |
      **Other Court-Ordered Payments:**

      % for item in user_court_payments:
        * ${ item.source }, ${ currency(item.value) }
      % endfor
    show if: unable_to_pay and user_court_payments.there_are_any

  - Edit:
    - user_monthly_payments.there_are_any
    - recompute:
      - recompute_obligations
      - obligations_list
    button: |
      **Do you have other monthly payments?**
      ${ word(yesno(user_monthly_payments.there_are_any)) }
    show if: unable_to_pay
  - Edit: 
    - user_monthly_payments.revisit
    - recompute:
      - recompute_obligations
      - obligations_list
    button: |
      **Other Monthly Payments:**

      % for item in user_monthly_payments:
        * ${ item.source }, ${ currency(item.value) }
      % endfor
    show if: unable_to_pay and user_monthly_payments.there_are_any

  - note: |
      <hr>
      ### Electronic Signature
  - Edit: MLH_esign
    button: |
      **Include your electronic signature on forms?**
      ${ word(yesno(MLH_esign)) }

---
reconsider: True
code: |
  if court_count > 1:
    court_index = court_index_for_specific_court_type
  else:
    # This means there is only one court of this type for this county.
    court_index = list(court_list.filter_courts_by_2([county_choice], [court_type], column_1='address_county', column_2='type'))[0][0]
  recompute_court = True

---
continue button field: users.revisit
question: |
  Edit your information
subquestion: |
  ${ users.table }
---
table: users.table
rows: users
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
  - Address: |
      row_item.address.block() if defined("row_item.address.address") else ""
  - Phone number: |
      row_item.phone_number if defined("row_item.phone_number") else ""
edit:
  - name.first
  - name.middle
  - name.last
  - address.address
  - no_phone_number
confirm: True

---
continue button field: other_parties.revisit
question: |
  Edit other party  information
subquestion: |
  ${ other_parties.table }
---
table: other_parties.table
rows: other_parties
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
  - Address: |
      row_item.address.block() if defined("row_item.address.address") else ""
  - Phone number: |
      row_item.phone_number if defined("row_item.phone_number") else ""
edit:
  - name.first
  - name.middle
  - name.last
  - address.address
  - no_phone_number
confirm: True

---
continue button field: user_vehicles.revisit
question: |
  Edit vehicles
subquestion: |
  ${ user_vehicles.table }

  ${ user_vehicles.add_action() }
---
table: user_vehicles.table
rows: user_vehicles
columns:
  - Name: |
      row_item.year_make_model(separator=' ')
  - Money owed: |
      currency(row_item.balance) if row_item.balance_owed else 'None'
edit:
  - year
  - make
  - model
  - balance_owed
confirm: True

---
continue button field: user_assets.revisit
question: |
  Edit other assets
subquestion: |
  ${ user_assets.table }

  ${ user_assets.add_action() }
---
table: user_assets.table
rows: user_assets
columns:
  - Asset: |
      row_item.source
  - Value: |
      currency(row_item.value)
edit:
  - source
  - value
confirm: True

---
continue button field: user_court_payments.revisit
question: |
  Edit court-ordered payments
subquestion: |
  ${ user_court_payments.table }

  ${ user_court_payments.add_action() }
---
table: user_court_payments.table
rows: user_court_payments
columns:
  - Asset: |
      row_item.source
  - Value: |
      currency(row_item.value)
edit:
  - source
  - value
confirm: True

---
continue button field: user_monthly_payments.revisit
question: |
  Edit other monthlypayments
subquestion: |
  ${ user_monthly_payments.table }

  ${ user_monthly_payments.add_action() }
---
table: user_monthly_payments.table
rows: user_monthly_payments
columns:
  - Asset: |
      row_item.source
  - Value: |
      currency(row_item.value)
edit:
  - source
  - value
confirm: True